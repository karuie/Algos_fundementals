# 反转链表II
# Definition for singly-linked list.
class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

class Solution:
    def reverseBetween(self, head, left, right):
        count = 1
        dummy = ListNode(0)
        dummy.next = head
        pre = dummy
        while pre.next and count < left:
            pre = pre.next
            count += 1
        cur = pre.next
        tail = cur
        while cur and count <= right:
            nxt = cur.next
            cur.next = pre.next
            pre.next = cur
            cur = nxt 
            tail.next = nxt 
            count += 1
        return dummy.next

x = ListNode(1,ListNode(2,ListNode(3,ListNode(4,ListNode(5)))))
y = Solution()
result = y.reverseBetween(x,3,4)
